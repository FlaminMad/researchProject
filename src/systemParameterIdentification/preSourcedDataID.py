#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Author: Alexander David Leech
Date:   16/12/2015
Rev:    2
Lang:   Python 2.7
Deps:   Numpy, RLS (Internal, see MVC)
Desc:   System Parameter identification using RLS based on already sourced data
        Use comma delimted file format in excel and open in a text editor for
        easy copy and paste data access.
"""

from RLS import RLS
import numpy as np

        
class preSourcedDataID:
        
    def __init__(self):
        #Initialise Recursive Least Squares Object
        self.rls = RLS()

    def run(self):
        self.testData()
        self.rls.setup(self.X,np.matrix.transpose(self.Z))

        while(True):
            for i in range(3, self.Z.size-1):
                x = self.X[:,i]
                y = self.Z[:,i]
                
                self.rls.solve(x,y)
                print self.rls.sysID
            print "Done, SysID is:"
            print self.rls.sysID
            break
            
    def testData(self):
        #U = np.array
        #Y = np.array([[90,90,91,87,95,93,100,87,93,86,87,94,91,91,97,92,104,109,115,123,126,134,131,146,149,154,163,170,178,180,180,193,194,203,209,212,210,218,230,239,240,241,245,247,251,263,259,271,273,274,278,284,281,294,298,302,303,305,308,309,320,321,322,326,327,333,336,337,343,350,352,353,358,358,363,366,365,367,367,372,376,374,382,378,387,388,389,392,394,397,399,402,396,402,401,403,407,410,415,421,423,418,418,427,427,427,426,426,429,429,432,427,429,429,430,432,434,434,433,436,437,447,448,436,442,454,446,445,452,448,448,447,456,454,456,457,458,457,459,459,460,460,463,460,460,463,466,465,458,467,463,464,464,471,466]])
        #self.Z = np.array([[90,91,87,95,93,100,87,93,86,87,94,91,91,97,92,104,109,115,123,126,134,131,146,149,154,163,170,178,180,180,193,194,203,209,212,210,218,230,239,240,241,245,247,251,263,259,271,273,274,278,284,281,294,298,302,303,305,308,309,320,321,322,326,327,333,336,337,343,350,352,353,358,358,363,366,365,367,367,372,376,374,382,378,387,388,389,392,394,397,399,402,396,402,401,403,407,410,415,421,423,418,418,427,427,427,426,426,429,429,432,427,429,429,430,432,434,434,433,436,437,447,448,436,442,454,446,445,452,448,448,447,456,454,456,457,458,457,459,459,460,460,463,460,460,463,466,465,458,467,463,464,464,471,466,469]])
        
        #U = np.array([[29.6,29.5,29.8,30.3,29.8,30.8,30,30.9,31.8,32.6,32.7,34.1,35,35.8,36,36.7,37.4,38.6,38.8,39.4,39.6,40.6,41.5,41.7,42.1,42.4,42.5,43.3,43.5,44.4,44.1]])
        #Y = np.array([[37.5,37.5,37.5,37.5,37.5,37.5,37.5,37.5,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40]])
        #self.Z = np.array([[29.5,29.8,30.3,29.8,30.8,30,30.9,31.8,32.6,32.7,34.1,35,35.8,36,36.7,37.4,38.6,38.8,39.4,39.6,40.6,41.5,41.7,42.1,42.4,42.5,43.3,43.5,44.4,44.1,45]])
        
        U = np.array([[47.3,47.4,48.3,48.3,48.1,48.3,48.2,48.5,48.3,48.3,48.5,49.2,50,50.3,51.2,51.3,51.5,52.3,53.8,54.5,55.2,55.5,57.1,57.2,57.7,57.8,57.8,58.3,58.7,58.8,60.3,60.5,60.6,60.5,60.8]])
        Y = np.array([[40,40,40,40,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5,42.5]])
        self.Z = np.array([[47.4,48.3,48.3,48.1,48.3,48.2,48.5,48.3,48.3,48.5,49.2,50,50.3,51.2,51.3,51.5,52.3,53.8,54.5,55.2,55.5,57.1,57.2,57.7,57.8,57.8,58.3,58.7,58.8,60.3,60.5,60.6,60.5,60.8,0]])
        
        self.X = np.concatenate((Y,U), axis=0)
        
def main():
    ID = preSourcedDataID()
    ID.run()

if __name__ == '__main__':main()